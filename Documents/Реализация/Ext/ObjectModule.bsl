#Область ОбработчикиСобытий  
Процедура ПриЗаписи(Отказ)
	Если ЗначениеЗаполнено(ДокументОснование) И НЕ ДокументОснование.УслугаОказана Тогда
		ДокументОснованиеОбъект = ДокументОснование.ПолучитьОбъект();
		ДокументОснованиеОбъект.УслугаОказана = Истина;
		ДокументОснованиеОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
КонецПроцедуры 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПредварительнаяЗапись") Тогда
		Контрагент = ДанныеЗаполнения.Клиент;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
			НоваяСтрока.Услуга = ТекСтрокаУслуги.Услуга;  
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
			НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
		КонецЦикла;
	КонецЕсли; 
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)	  	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;
	Движения.ЗаказыКлиентов.Записывать = Истина; 
	Движения.Хозрасчетный.Записывать = Истина; 
	
	Движения.ТоварыНаСкладах.Записать();
	Движения.Продажи.Записать();
	Движения.УчетЗатрат.Записать(); 
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный; 
	ЭлементБлокировки.ИсточникДанных = Товары; 
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура"); 
	Блокировка.Заблокировать();    
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;               
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТовары.Номенклатура КАК Номенклатура,
	|	СУММА(РеализацияТовары.Количество) КАК Количество,
	|	СУММА(РеализацияТовары.Сумма) КАК Сумма,
	|	РеализацияТовары.Ссылка.Склад КАК Склад,
	|	РеализацияТовары.Номенклатура.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.Реализация.Товары КАК РеализацияТовары
	|ГДЕ
	|	РеализацияТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТовары.Номенклатура,
	|	РеализацияТовары.Ссылка.Склад,
	|	РеализацияТовары.Номенклатура.СчетБухгалтерскогоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияУслуги.Услуга,
	|	РеализацияУслуги.Количество,
	|	СУММА(РеализацияУслуги.Сумма),
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.Реализация.Услуги КАК РеализацияУслуги
	|ГДЕ
	|	РеализацияУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияУслуги.Услуга,
	|	РеализацияУслуги.Количество
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ВТ_Товары.Количество КАК КоличествоВДокументе,
	|	ВТ_Товары.Сумма КАК СуммаВДокументе,
	|	ВТ_Товары.Склад КАК Склад,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокГодности,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ВТ_Товары.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&МоментВремени,
	|				(Номенклатура, Склад) В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Номенклатура,
	|						ВТ_Товары.Склад
	|					ИЗ
	|						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	|		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|			И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.СрокГодности
	|ИТОГИ
	|	МАКСИМУМ(КоличествоВДокументе),
	|	МАКСИМУМ(СуммаВДокументе),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени())); 
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	Пока ВыборкаНоменклатура.Следующий() Цикл 
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
			СтоимостьОбщая = 0; 			
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток; 
			Если Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить() И Превышение > 0 Тогда 
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				Сообщение.Сообщить();
				Отказ = Истина;
			ИначеЕсли НЕ Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить() И Превышение > 0 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				Сообщение.Сообщить();
			КонецЕсли;
			
			Если Отказ Тогда 
				Продолжить;
			КонецЕсли;
			
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе; 			
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл 
				Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
				
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
				Движение.Склад = ВыборкаДетальные.Склад;
				Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
				Движение.Количество = Списываем; 
				
				Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда
					СуммаСписания = ВыборкаДетальные.СуммаОстаток;
				Иначе    
					СуммаСписания = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
				КонецЕсли;
				Движение.Сумма = СуммаСписания;
				
				ОсталосьСписать = ОсталосьСписать - Списываем; 
				СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;
				
				Движение = Движения.Продажи.Добавить(); 
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
				Движение.Сотрудник = Сотрудник;
				Движение.Контрагент = Контрагент; 
				Движение.Количество = Списываем;
				Движение.Сумма = СтоимостьОбщая;				
				
				Движение = Движения.Хозрасчетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи;
				Движение.СчетКт = ВыборкаДетальные.СчетБухгалтерскогоУчета;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ВыборкаДетальные.Номенклатура; 
				Движение.Период = Дата;    
				Движение.Сумма = СуммаСписания;
				Движение.Содержание = "Списана себестоимость товарно-материальных ценностей";
			КонецЦикла; 
			
			Движение = Движения.УчетЗатрат.Добавить(); 
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Движение.Сумма = СтоимостьОбщая;
			
		Иначе
			Движение = Движения.ЗаказыКлиентов.Добавить(); 
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.ЗаказКлиента = ДокументОснование; 
			Движение.Период = Дата;
			Движение.Клиент = Контрагент; 
			Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;  
			
			Движение = Движения.Продажи.Добавить(); 
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			Движение.Сотрудник = Сотрудник;
			Движение.Контрагент = Контрагент; 
			Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
			Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;				
		КонецЕсли;
	КонецЦикла; 
	
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Продажи;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, Контрагент);
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг";	
КонецПроцедуры
#КонецОбласти


