#Область ОбработчикиСобытий 
Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Движение = Движения.ЗаказыКлиентов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.ЗаказКлиента = Ссылка;
		Движение.Сумма = ТекСтрокаУслуги.Сумма; 
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ЗначениеЗаполнено(Ссылка) И УслугаОказана = Ложь Тогда
		ПроверитьОказаниеУслуг();
	КонецЕсли;   
	ДлительностьУслуг = РассчитатьДатуОкончанияЗаписи();
	Если ДлительностьУслуг = 0 Тогда 
		ДлительностьУслуг = 60;
	КонецЕсли;
	ДатаОкончанияЗаписи = ДатаЗаписи + ДлительностьУслуг*60;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции  
Процедура ПроверитьОказаниеУслуг()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|    Реализация.Ссылка КАК Ссылка
	|ИЗ
	|    Документ.Реализация КАК Реализация
	|ГДЕ
	|    Реализация.ДокументОснование = &ДокументОснование
	|    И Реализация.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|    Реализация.Ссылка";
	
	Рез = Запрос.Выполнить();
	Если НЕ Рез.Пустой() Тогда
		УслугаОказана = Истина;   		
	КонецЕсли;
КонецПроцедуры

Функция РассчитатьДатуОкончанияЗаписи()
	ТЧУслуги = Услуги.Выгрузить(,"Услуга");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЧУслуги", ТЧУслуги); 
	Запрос.Текст = "ВЫБРАТЬ
	|    ТЧУслуги.Услуга КАК Услуга
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|    &ТЧУслуги КАК ТЧУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    СУММА(Номенклатура.ДлительностьУслуги) КАК ДлительностьУслуги
	|ИЗ
	|    ВТ_Номенклатура КАК ВТ_Номенклатура
	|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|        ПО ВТ_Номенклатура.Услуга = Номенклатура.Ссылка";
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		возврат 0;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	возврат Выборка.ДлительностьУслуги;
КонецФункции
#КонецОбласти